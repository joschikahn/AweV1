@model IEnumerable<AweV1.Models.Thesis>

@{
    Layout = "_PublicLayout";
}

@{
    ViewData["Title"] = "Public";
}

<!--noch nicht fertig!-->
<style>

    /* Dropdown Button */
    .dropbtn {
        /*background-color: #3498DB;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
        cursor: pointer;*/
    }

    /* Dropdown button on hover & focus
        .dropbtn:hover, .dropbtn:focus {
            background-color: #2980B9;
        }*/

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #fff;
        position: relative;
        /*min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;*/
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: #000;
            padding: 12px 12px;
            */ text-decoration: none;
            display: block;
        }

        .dropdown-content span {
            color: #000;
            padding: 12px 12px;
            */ text-decoration: none;
            display: block;
        }

        .dropdown-content a:hover {
            color: #337ab7;
        }

    /* Change color of dropdown links on hover
            .dropdown-content a:hover {
                background-color: #ddd
            }*/

    /* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
    .show {
        display: block;
    }
</style>

<script>
    function resetForm() {
        document.getElementById("Search").value = null;
        document.getElementById("Filter").value = null;
        document.getElementById("Sort").value = null;
        document.getElementById("Page").value = null;
        document.getElementById("PageSize").value = null;
        document.getElementById("Form").submit();
    }

    /* When the user clicks on the button,
toggle between hiding and showing the dropdown content */
    function myFunction(itemId) {
        document.getElementById(itemId).classList.toggle("show");
    }

    // Close the dropdown menu if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.dropbtn')) {
            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }

</script>

<h2>Thesis: Index</h2>

<form id="Form" asp-action="Index" method="get">

    <p>
        <input type="button" value="Reset" class="btn btn-default pull-right" onclick="resetForm()" />



    </p>

    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-xs-4">
                    <label class="control-label">Search by title:</label>
                    <input class="form-control" name="Search" id="Search" value="@ViewBag.Search" placeholder="Enter keyword" onchange="document.getElementById('Form').submit()">
                </div>
                <div class="col-xs-4">

                </div>
                <!-- Filter-Funktion auskommentiert, da sie nicht richtig funktioniert (siehe Thesis-Controller Z. 40) -->
                <!-- <div class="col-xs-4">
                    <label class="control-label">Filter by type:</label>
                    @Html.DropDownList("Filter", ViewBag.FilterValues, "--- Select one ---", new { id = "Filter", @class = "form-control", onchange = "document.getElementById('Form').submit()" })
                </div> -->
                <div class="col-xs-4">
                    <label class="control-label">Sort by:</label>
                    @Html.DropDownList("Sort", Html.GetEnumSelectList(typeof(AweV1.Controllers.ThesisController.SortCriteria)), new { id = "Sort", @class = "form-control", onchange = "document.getElementById('Form').submit()" })
                </div>
            </div>
        </div>

        <table class="table table-bordered">
            <thead>
            <th class="text-left">@Html.DisplayNameFor(model => model.Title) (@Html.DisplayNameFor(model => model.Type))</th>
            <tr>
                </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    string studiengangType;
                    if (item.Bachelor && item.Master) { studiengangType = "Bachelor, Master"; }
                    else if (item.Bachelor && !item.Master) { studiengangType = "Bachelor"; }
                    else { studiengangType = "Master"; }

                    <tr>
                        <td class="dropdown">
                            <input type="button" value="@Html.DisplayFor(modelItem => item.Title)" onclick="myFunction(@item.Id)" class="dropbtn" /> (@studiengangType)
                            <div id="@item.Id" class="dropdown-content">
                                <a>@Html.DisplayFor(modelItem => item.Description)</a>
                                <a>@Html.DisplayFor(modelItem => item.Status)</a>
                                @foreach (var supervisor in ViewBag.supervisor)
                                {
                                    if (supervisor.Id == item.SupervisorId)
                                    {

                                        <a href="mailto:@supervisor.Email">@supervisor.LastName</a>
                                    }
                                }

                            </div>
                        </td>
                    </tr>
                }

            </tbody>
        </table>

        <div class="panel-footer">
            <div class="form-inline row">
                <div class="col-xs-4">
                    <div class="form-group pull-left">
                        <span style="vertical-align: middle">Page&nbsp;</span>
                        <input name="Page" id="Page" type="number" value="@ViewBag.Page" class="form-control text-center" style="vertical-align: middle; width: 25%" onchange="document.getElementById('Form').submit()" />
                        <span style="vertical-align: middle">&nbsp;of @ViewBag.PageTotal</span>
                    </div>
                </div>
                <div class="col-xs-4">
                    <div class="text-center">
                        <ul class="pagination" style="margin: 0">
                            <li class="@(ViewBag.Page <= 1 ? "disabled" : null)"><a href="#" onclick="document.getElementById('Page').value = 1; document.getElementById('Form').submit()">First</a></li>
                            <li class="@(ViewBag.Page <= 1 ? "disabled" : null)"><a href="#" onclick="document.getElementById('Page').value--; document.getElementById('Form').submit()">Prev</a></li>
                            <li class="@(ViewBag.Page >= ViewBag.PageTotal ? "disabled" : null)"><a href="#" onclick="document.getElementById('Page').value++; document.getElementById('Form').submit()">Next</a></li>
                            <li class="@(ViewBag.Page >= ViewBag.PageTotal ? "disabled" : null)"><a href="#" onclick="document.getElementById('Page').value = @ViewBag.PageTotal; document.getElementById('Form').submit()">Last</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-xs-4">
                    <div class="form-group pull-right">
                        <span style="vertical-align: middle">Items per Page:&nbsp;</span>
                        @Html.DropDownList("PageSize", new SelectList(new string[] { "10", "20", "30", "40", "50" }, ViewBag.PageSize), new { id = "PageSize", @class = "form-control", style = "vertical-align: middle", onchange = "document.getElementById('Form').submit()" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>